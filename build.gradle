apply from: gradle.oshCoreDir + '/common.gradle'
description = ''

allprojects {
    version = "1.3.2"
}

subprojects {
    repositories.addAll(rootProject.repositories)
}

dependencies {
    // FROM OSH-CORE
    implementation 'org.sensorhub:sensorhub-core:' + oshCoreVersion
    implementation 'org.sensorhub:sensorhub-core-osgi:' + oshCoreVersion
    implementation 'org.postgresql:postgresql:42.7.1'
    implementation 'org.sensorhub:sensorhub-service-swe:' + oshCoreVersion
    implementation 'org.sensorhub:sensorhub-webui-core:' + oshCoreVersion
    // Connected Systems
    implementation 'org.sensorhub:sensorhub-service-consys'

    // FROM OSH-ADDONS
    implementation project(':sensorhub-driver-videocam')
    implementation project(':sensorhub-driver-rtpcam')
    implementation project(':sensorhub-driver-ffmpeg')
    implementation project(':sensorhub-process-ffmpeg')
    implementation project(':sensorhub-service-video')
    implementation project(':sensorhub-driver-dahua')
    implementation project(':sensorhub-driver-axis')
//    implementation project(':sensorhub-driver-sony-vb600')

    // FROM OSH-OAKRIDGE-MODULES
    // Drivers
    implementation project(':sensorhub-driver-kromek-d3s')
    implementation project(':sensorhub-driver-rs350')
    implementation project(':sensorhub-driver-rapiscan')
    implementation project(':sensorhub-driver-aspect')
    implementation project(':sensorhub-driver-kromek-d5')

    // Processes
    implementation project(':sensorhub-process-occupancy')

    // Additional Modules
    implementation project(':sensorhub-system-lane')
    implementation project(':sensorhub-database-purge')
    implementation project(':sensorhub-webui-oscar')

    implementation project(':security-utils')
}

configurations {
    rel
    dev
    stable
}

distributions{
    rel {
        distributionBaseName = 'osh-node-oscar'
        contents {
            from 'scripts/standard'
            from 'scripts/keystores'
            from 'config/standard'
            into('config'){
                from 'config/eml'
            }
            from 'README.md'
            into('web'){
                from 'web/oscar-viewer/web'
            }
            into('trusted_certificates') {
                from 'scripts/trusted_certificates'
            }
            into('lib') {
                from 'third-party-drivers'
                from project.configurations.runtimeClasspath
            }
            into('rules') {
                from 'rules'
            }
        }
    }
}

apply from: gradle.oshCoreDir + '/release.gradle'